// +prop AppID = 1
// +prop Conditions = 'ContractConditions("MainCondition")'
contract UploadBinary {
    data {
        ApplicationId int
        Name string
        Data file
    }

    conditions {
        $Id = Int(DBFind("binaries").Columns("id").Where({app_id: $ApplicationId,
            member_id: $key_id, name: $Name}).One("id"))

        if $Id == 0 {
            if $ApplicationId == 0 {
                warning "Application id cannot equal 0"
            }
        }
    }
    action {
        var hash, mimeType string
        var body bytes

        body = $Data["Body"]
        hash = Hash(data)
        mimeType = $Data["MimeType"]

        if mimeType == "" {
            mimeType = "application/octet-stream"
        }

        if $Id != 0 {
            DBUpdate("binaries", $Id, {"data": body,"hash": hash,"mime_type": mimeType})
        } else {
            $Id = DBInsert("binaries", {"app_id": $ApplicationId,"member_id": $key_id,
               "name": $Name,"data": body,"hash": hash,"mime_type": mimeType})
        }

        $result = $Id
    }
}