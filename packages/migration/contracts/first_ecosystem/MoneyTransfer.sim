// +prop AppID = 1
// +prop Conditions = 'ContractConditions("MainCondition")'
contract MoneyTransfer {
	data {
		Recipient string
		Amount    string
		Comment     string "optional"
	}
	conditions {
		$recipient = AddressToId($Recipient)
		if $recipient == 0 {
			error Sprintf("Recipient %s is invalid", $Recipient)
		}
		var total money
		$amount = Money($Amount) 
		if $amount <= 0 {
			error "Amount must be greater then zero"
		}

        var row map
        var req money
		row = DBRow("keys").Columns("amount").WhereId($key_id)
        total = Money(row["amount"])
        req = $amount + Money(100000000000000000) 
        if req > total {
			error Sprintf("Money is not enough. You have got %v but you should reserve %v", total, req)
		}
	}
	action {
		DBUpdate("keys", $key_id,"-amount", $amount)
		if DBFind("keys").Columns("id").WhereId($recipient).One("id") == nil {
			DBInsert("keys", "id,amount",  $recipient, $amount)
		} else {
			DBUpdate("keys", $recipient,"+amount", $amount)
		}
		DBInsert("history", "sender_id,recipient_id,amount,comment,block_id,txhash",
				$key_id, $recipient, $amount, $Comment, $block, $txhash)
	}
}