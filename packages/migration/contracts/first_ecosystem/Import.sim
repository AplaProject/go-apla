// +prop AppID = '1'
// +prop Conditions = 'ContractConditions("MainCondition")'
contract Import {
    data {
        Data string
    }
    conditions {
        $ApplicationId = 0
        var app_map map
        app_map = DBFind("@1buffer_data").Columns("value->app_name").Where({"key": "import_info", "account": $account_id, "ecosystem": $ecosystem_id}).Row()
        if app_map {
            var app_id int ival string
            ival = Str(app_map["value.app_name"])
            app_id = DBFind("@1applications").Columns("id").Where({"name": ival, "ecosystem": $ecosystem_id}).One("id")
            if app_id {
                $ApplicationId = Int(app_id)
            }
        }
    }
    action {
        var editors, creators map
        editors["pages"] = "EditPage"
        editors["blocks"] = "EditBlock"
        editors["menu"] = "EditMenu"
        editors["app_params"] = "EditAppParam"
        editors["languages"] = "EditLang"
        editors["contracts"] = "EditContract"
        editors["tables"] = "" // nothing
        creators["pages"] = "NewPage"
        creators["blocks"] = "NewBlock"
        creators["menu"] = "NewMenu"
        creators["app_params"] = "NewAppParam"
        creators["languages"] = "NewLang"
        creators["contracts"] = "NewContract"
        creators["tables"] = "NewTable"
        var dataImport array
        dataImport = JSONDecode($Data)
        var i int
        while i < Len(dataImport) {
            var item cdata map type name string
            cdata = dataImport[i]
            if cdata {
                cdata["ApplicationId"] = $ApplicationId
                type = cdata["Type"]
                name = cdata["Name"]
                // Println(Sprintf("import %v: %v", type, cdata["Name"]))
                var tbl string
                tbl = "@1" + Str(type)
                if type == "app_params" {
                    item = DBFind(tbl).Where({"name": name, "ecosystem": $ecosystem_id, "app_id": $ApplicationId}).Row()
                } else {
                    item = DBFind(tbl).Where({"name": name, "ecosystem": $ecosystem_id}).Row()
                }
                var contractName string
                if item {
                    contractName = editors[type]
                    cdata["Id"] = Int(item["id"])
                    if type == "contracts" {
                        if item["conditions"] == "false" {
                            // ignore updating impossible
                            contractName = ""
                        }
                    } elif type == "menu" {
                        var menu menuItem string
                        menu = Replace(item["value"], " ", "")
                        menu = Replace(menu, "\n", "")
                        menu = Replace(menu, "\r", "")
                        menuItem = Replace(cdata["Value"], " ", "")
                        menuItem = Replace(menuItem, "\n", "")
                        menuItem = Replace(menuItem, "\r", "")
                        if Contains(menu, menuItem) {
                            // ignore repeated
                            contractName = ""
                        } else {
                            cdata["Value"] = item["value"] + "\n" + cdata["Value"]
                        }
                    }
                } else {
                    contractName = creators[type]
                }
                if contractName != "" {
                    CallContract(contractName, cdata)
                }
            }
            i = i + 1
        }
        // Println(Sprintf("> time: %v", $time))
    }
}