// +prop AppID = '1'
// +prop Conditions = 'ContractConditions("MainCondition")'
contract CallDelayedContract {
	data {
		Id int
	}
	conditions {
		var rows array
		rows = DBFind("delayed_contracts").Where({id: $Id, deleted: 0} )

		if !Len(rows) {
			error Sprintf("Delayed contract %d does not exist", $Id)
		}
		$cur = rows[0]
		$limit = Int($cur["limit"])
		$counter = Int($cur["counter"])

		if $key_id != Int($cur["key_id"]) {
			error "Access denied"
		}

		if $block < Int($cur["block_id"]) {
			error Sprintf("Delayed contract %d must run on block %s, current block %d", $Id, $cur["block_id"], $block)
		}

		if $limit > 0 && $counter >= $limit {
			error Sprintf("Delayed contract %d is limited by number of launches", $Id)
		}
	}
	action {
		$counter = $counter + 1

		var block_id int
		block_id = $block
		if $limit == 0 || $limit > $counter {
			block_id = block_id + Int($cur["every_block"])
		}

		DBUpdate("delayed_contracts", $Id, {"counter": $counter, "block_id": block_id})

		var params map
		CallContract($cur["contract"], params)
	}
}