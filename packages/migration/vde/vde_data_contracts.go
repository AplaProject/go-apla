// Code generated by go generate; DO NOT EDIT.

package vde

var contractsDataSQL = `
INSERT INTO "%[1]d_contracts" (id, name, value, conditions, app_id)
VALUES
	(next_id('%[1]d_contracts'), 'EditCron', 'contract EditCron {
		data {
			Id         int
			Contract   string
			Cron       string "optional"
			Limit      int "optional"
			Till       string "optional date"
			Conditions string
		}
		conditions {
			ConditionById("cron", true)
			ValidateCron($Cron)
		}
		action {
			if !$Till {
				$Till = "1970-01-01 00:00:00"
			}
			if !HasPrefix($Contract, "@") {
				$Contract = "@" + Str($ecosystem_id) + $Contract
			}
			DBUpdate("cron", $Id, {"cron": $Cron,"contract": $Contract,
			    "counter":$Limit, "till": $Till, "conditions":$Conditions})
			UpdateCron($Id)
		}
	}
', 'ContractConditions("MainCondition")', 1),
	(next_id('%[1]d_contracts'), 'ListVDE', 'contract ListVDE {
		data {}
	
		conditions {}
	
		action {
			return GetVDEList()
		}
	}
', 'ContractConditions("MainCondition")', 1),
	(next_id('%[1]d_contracts'), 'MainCondition', 'contract MainCondition {
		conditions {
		  if EcosysParam("founder_account")!=$key_id
		  {
			warning "Sorry, you do not have access to this action."
		  }
		}
	  }
', 'ContractConditions("MainCondition")', 1),
	(next_id('%[1]d_contracts'), 'NewCron', 'contract NewCron {
		data {
			Cron       string
			Contract   string
			Limit      int "optional"
			Till       string "optional date"
			Conditions string
		}
		conditions {
			ValidateCondition($Conditions,$ecosystem_id)
			ValidateCron($Cron)
		}
		action {
			if !$Till {
				$Till = "1970-01-01 00:00:00"
			}
			if !HasPrefix($Contract, "@") {
				$Contract = "@" + Str($ecosystem_id) + $Contract
			}
			$result = DBInsert("cron", {owner: $key_id,cron:$Cron,contract: $Contract,
				counter:$Limit, till: $Till,conditions: $Conditions})
			UpdateCron($result)
		}
	}
', 'ContractConditions("MainCondition")', 1),
	(next_id('%[1]d_contracts'), 'NewVDE', 'contract NewVDE {
		data {
			VDEName string
			DBUser string
			DBPassword string
			VDEAPIPort int
		}
	
		conditions {
		}
	
		action {
			CreateVDE($VDEName, $DBUser, $DBPassword, $VDEAPIPort)
		}
	}
', 'ContractConditions("MainCondition")', 1),
	(next_id('%[1]d_contracts'), 'RemoveVDE', 'contract RemoveVDE {
		data {
			VDEName string
		}
		conditions {}
		action{
			DeleteVDE($VDEName)
		}
	}
', 'ContractConditions("MainCondition")', 1),
	(next_id('%[1]d_contracts'), 'RunVDE', 'contract RunVDE {
		data {
			VDEName string
		}
	
		conditions {
		}
	
		action {
			StartVDE($VDEName)
		}
	}
', 'ContractConditions("MainCondition")', 1),
	(next_id('%[1]d_contracts'), 'StopVDE', 'contract StopVDE {
		data {
			VDEName string
		}
	
		conditions {
		}
	
		action {
			StopVDEProcess($VDEName)
		}
	}
', 'ContractConditions("MainCondition")', 1);
`
